import{_ as s,o as a,c as n,a as e}from"./app.e8b008f9.js";const l=JSON.parse('{"title":"查看部署结果","description":"","frontmatter":{"outline":"deep"},"headers":[{"level":2,"title":"查看 ArgoCD 的资源","slug":"查看-argocd-的资源","link":"#查看-argocd-的资源","children":[]},{"level":2,"title":"查看 kubectl 的资源","slug":"查看-kubectl-的资源","link":"#查看-kubectl-的资源","children":[]}],"relativePath":"guide/user-guide/user-guide-06.md"}'),p={name:"guide/user-guide/user-guide-06.md"},o=[e('<h1 id="查看部署结果" tabindex="-1">查看部署结果 <a class="header-anchor" href="#查看部署结果" aria-hidden="true">#</a></h1><p>在开始本节之前，请确保您已阅读 <a href="./user-guide-00.html">概述</a> 章节，了解 Nautes 的主流程和相关术语；并且已经创建了至少一个部署运行时，详情参见 <a href="./user-guide-05.html">维护部署运行时</a>。</p><p>在部署产品的过程中或者部署完成后，支持通过 ArgoCD 控制台和 kubectl 命令行两种方式查看部署结果。产品分别与 ArgoCD 中的 project、Kubernetes 集群中的 namespace 建立对应关系，借助 ArgoCD project 和 Kubernetes namespace 既定规则对产品进行权限管理。</p><p>下面将详细介绍这两种方式的操作步骤。</p><h2 id="查看-argocd-的资源" tabindex="-1">查看 ArgoCD 的资源 <a class="header-anchor" href="#查看-argocd-的资源" aria-hidden="true">#</a></h2><p>查看产品的相关资源：</p><ol><li>访问安装在部署运行时集群中的 <a href="./quickstart-03.html#查看组件信息">ArgoCD UI</a> 。</li><li>点击 log in via dex，将跳转到 GitLab UI 地址；填写您的 GitLab 账号密码并点击登录，将单点登入到 ArgoCD。在 ArgoCD UI，您可以查看被授权产品相关的 ArgoCD applications。ArgoCD applications 与产品的部署运行时对应。 <img src="/docs/assets/quickstart-argocd-1.7d64ecfb.png" alt="directive syntax graph"><img src="/docs/assets/quickstart-argocd-2.e20eb57e.png" alt="directive syntax graph"></li><li>点击 ArgoCD UI 左侧菜单栏的“设置”，将跳转到 ArgoCD 的设置功能界面；点击 projects，可以查看授权产品相关的 ArgoCD projects。ArgoCD projects 与产品对应。 由于一个产品可以包含多个部署运行时，一个用户可以是多个产品的成员，因此通过 ArgoCD UI 可以查看授权产品的所有部署运行时环境。</li></ol><p>查看产品的部署运行时环境：</p><ol><li>选择某个 ArgoCD application，将跳转到 application 的详情界面，并呈现部署运行时环境中的资源，例如 deployment、service 等。可以查看资源的类型、名称、运行状态、运行时长、运行实例数等。</li><li>选择某个资源，可以查看资源的资源清单、事件、日志等，并对该资源执行同步、重启、删除等操作。用户拥有 ArgoCD project 中所有 applications、exec、logs 资源的所有操作权限。由于 ArgoCD 监听了产品的代码库，因此无论在 ArgoCD 中怎么操作，最终都将与代码库中的部署配置清单保持一致。</li></ol><h2 id="查看-kubectl-的资源" tabindex="-1">查看 kubectl 的资源 <a class="header-anchor" href="#查看-kubectl-的资源" aria-hidden="true">#</a></h2><ol><li><p>安装 Dex 客户端。【未完成】</p></li><li><p>访问 Dex 客户端，填写 extra scopes 属性值为 groups，点击 login，保存 ID Token 到本地。 <img src="/docs/assets/quickstart-dex-1.fef7de07.png" alt="directive syntax graph"></p></li></ol><p>生成的 ID Token，类似下文：</p><blockquote><p>eyJhbGciOiJSUzI1NiIsImtpZCI6IjA2OGUyODFmN2FkYTk2NjNmMWI0MTc0NGFhYTUzZDRmYjk0N2Q1YjMifQ.eyJpc3MiOiJodHRwczovL2RleC5ibHV6aW4uaW86OTA4MCIsInN1YiI6IkNnSXhNaElHWjJsMGJHRmkiLCJhdWQiOiJwbGF0Zm9ybSIsImV4cCI6MTY4MDg3Mjc2MiwiaWF0IjoxNjgwNzg2MzYyLCJhdF9oYXNoIjoiWTNNbnRHLTE3SERaWjNVb0hiNWdmUSIsImNfaGFzaCI6IlBGUXNEM1hPSkhNZ1B3RW1LNXl5bEEiLCJlbWFpbCI6ImxpdWp1bmhvbmdAdmlzcHJhY3RpY2UuY29tIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsImdyb3VwcyI6WyJ5dW50aSIsIm5hdXRlcy1sYWJzIiwidGVrdG9uY2QiLCJkZXYtdGVuYW50IiwieXVudGkvc3ViZ3JvdXAiLCJ5dW50aS9zdWJncm91cC9zdWJzdWJncm91cCJdLCJuYW1lIjoibGl1anVuaG9uZyIsInByZWZlcnJlZF91c2VybmFtZSI6ImxpdWp1bmhvbmcifQ.AYiLwJMcVaJdVdF-j_RZnHCPpg1psF3CJlzlBzvBYcuI_t7slgRaumRmGJEYXHYn2QFxjEZCNnBiOpJDDJoitVTxi1qoZ2nNoxhB3Wtxc1MoqkiPR5wy49yHw5roTnqIuEBy5BMpN_embxB9vK1bwxf414PsYKm1Dhbj8dynpURjpTsLrN5k7zVC7RQxVvglNX4cgYEucvSLqMEdtHNlmtnRsl6DJuItxC0MYwXlp4C9FNWswUjSpargdX4wgqfYy91l66GiI2Xj_zdba0NHLcPean-nmBMObLNhxex4hj8IVcGyiEu9in87y8eisrCBoLEWP9SJ_ZxWiOPoTFr54A</p></blockquote><ol start="2"><li>通过命令行获取部署运行时集群的 kubeconfig 文件，并将 ID Token 替换 kubeconfig 文件中的 users 配置。</li></ol><div class="language-Shell"><button class="copy"></button><span class="lang">Shell</span><pre><code><span class="line"><span style="color:#676E95;"># 将实际的集群名称替换 $VCLUSTER 变量，并执行命令行获取部署集群的 kubeconfig 文件</span></span>\n<span class="line"><span style="color:#A6ACCD;">kubectl get secret vc-</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">VCLUSTER-vcluster -n </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">VCLUSTER --template={{.data.config}} </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> base64 -d</span></span>\n<span class="line"></span></code></pre></div><div class="language-yaml"><button class="copy"></button><span class="lang">yaml</span><pre><code><span class="line"><span style="color:#676E95;"># 将 ID-Token 替换 kubeconfig 文件中的 users 配置</span></span>\n<span class="line"><span style="color:#F07178;">apiVersion</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">v1</span></span>\n<span class="line"><span style="color:#F07178;">clusters</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#FFCB6B;">...</span><span style="color:#F78C6C;">...</span></span>\n<span class="line"><span style="color:#F07178;">kind</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Config</span></span>\n<span class="line"><span style="color:#F07178;">preferences</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>\n<span class="line"><span style="color:#F07178;">users</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">user</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">user</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">token</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</span></span>\n<span class="line"></span></code></pre></div><ol start="3"><li>在 kubectl 客户端，切换 KUBECONFIG 环境变量为前置步骤的 kubeconfig 文件之后，可以通过 kubectl 命令行查看与部署运行时对应的 namespace 中的资源，并且拥有该 namespace 的管理员权限。</li></ol><div class="language-Shell"><button class="copy"></button><span class="lang">Shell</span><pre><code><span class="line"><span style="color:#676E95;"># 切换 Kubernetes 集群为上文修改后的 kubeconfig 文件</span></span>\n<span class="line"><span style="color:#C792EA;">export</span><span style="color:#A6ACCD;"> KUBECONFIG=/opt/vcluster/kubeconfig-dex.yaml</span></span>\n<span class="line"><span style="color:#676E95;"># 使用 kubectl 命令行管理产品的相关资源，以下命令行仅为示例</span></span>\n<span class="line"><span style="color:#A6ACCD;">kubectl get deployment -n deployment-runtime-1</span></span>\n<span class="line"><span style="color:#A6ACCD;">kubectl delete deployment deployment-test -n deployment-runtime-1</span></span>\n<span class="line"></span></code></pre></div>',18)];const c=s(p,[["render",function(s,e,l,p,c,t){return a(),n("div",null,o)}]]);export{l as __pageData,c as default};
